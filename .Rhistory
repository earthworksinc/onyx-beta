View(merged_set)
summary(guidelines)
deleterious <- as.numeric(c("10"	,
"25"	,
"25"	,
"25"	,
"25"	,
"60"	,
"30"	,
"-"	,
"-"	,
"15"	,
"25"	,
"30"	,
"30")	)
guidelines <- data.frame(province, deleterious)
summary(guidelines)
merged_set <- merge(provinces, guidelines, by.x="PRENAME", by.y="province")
summary(merged_set)
merged_set <- merge(provinces, guidelines, by.y="PRENAME", by.x="province")
merged_set <- merge(guidelines,provinces, by.y="PRENAME", by.x="province")
summary(merged_set)
View(merged_set)
merged_set <- merge(provinces, guidelines, by.x="PRENAME", by.y="province")
summary(merged_set)
View(merged_set)
data <- read.csv(""D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
data
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
data
merged_set <- merge(provinces, data, by.x="PRENAME", by.y="province")
merged_set <- merge(provinces, data, by.x="PRENAME", by.y="Jurisdiction")
View(merged_set)
merged_set <- merge(provinces, data, by.x="PRENAME", by.y="Deleterious")
merged_set <- merge(provinces, data, by.x="PRENAME", by.y="Deleterious")
View(merged_set)
shp <- readOGR("D:/Effluent & Storm Water Management/Data/gpr_000b11a_e/gpr_000b11a_e.shp")
summary(shp)
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction")
summary(merged_set)
View(merged_set)
data
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction")
merged_set$Deleterious
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction")
merged_set$Deleterious
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
data <- as.data.frame(data)
head(data)
shp$PRENAME
test<- as.data.frame(shp$PRENAME)
test
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction")
merged_set
merged_set$Deleterious
merged_set
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction")
merged_set$Deleterious
shp$Deleterious <- data$Deleterious[match(shp$PRENAME, data$Jurisdiction)]
summary(shp)
shp$Deleterious
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines2.csv")
head(data)
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction")
merged_set$Deleterious
merged_set$Deleterious
merged_set
shp$Deleterious
shp2 <- SpatialPolygonsDataFrame(shp)
shp2 <- as.data.frame(shp)
shp2
shp <- readOGR("D:/Effluent & Storm Water Management/Data/gpr_000b11a_e/gpr_000b11a_e.shp")
shp <- read_sf("D:/Effluent & Storm Water Management/Data/gpr_000b11a_e/gpr_000b11a_e.shp")
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction")
merged_set
shp$Deleterious
shp$Deleterious <- data$Deleterious[match(shp$PRENAME, data$Jurisdiction)]
shp$Deleterious
shp <- read_sf("D:/Effluent & Storm Water Management/Data/gpr_000b11a_e/gpr_000b11a_e.shp")
shp2 <- as.data.frame(shp)
shp2
shp2$geometry
plot(shp2$geometry)
shp<- readOGR("C:/Users/Windows11/Downloads/lpr_000b16a_e/lpr_000b16a_e.shp")
plot(shp)
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction")
merged_set
merged_set$Deleterious
View(merged_set)
data
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction", all=TRUE)
shp$Deleterious
shp<- readOGR("C:/Users/Windows11/Downloads/lpr_000b16a_e/lpr_000b16a_e.shp")
merged_set <- merge(shp, data, by.x="PRENAME", by.y="Jurisdiction", all=TRUE)
shp$Deleterious
View(merged_set)
merged_set <- merge(shp, data, by.x=PRENAME, by.y=Jurisdiction, all=TRUE)
merged_set <- merge(shp, data, by.x='PRENAME', by.y='Jurisdiction', all=TRUE)
merged_set
shp$Deleterious
shp<- readOGR("C:/Users/Windows11/Downloads/lpr_000b16a_e/lpr_000b16a_e.shp")
shp2 <- shp
merged_set <- merge(shp2, data, by.x='PRENAME', by.y='Jurisdiction', all=TRUE)
shp$Deleterious
shp2 <- as.data.frame(shp)
write.csv(shp2, "D:/Effluent & Storm Water Management/working files/canada-wide guidelines3")
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines2.csv")
head(data)
shp <- read_sf("D:/Effluent & Storm Water Management/Data/gpr_000b11a_e/gpr_000b11a_e.shp")
merged_set <- merge(shp, data, by.x='PRENAME', by.y='Jurisdiction', all=TRUE)
shp$Deleterious
merged_set
shp <- readOGR("D:/Effluent & Storm Water Management/Data/gpr_000b11a_e/gpr_000b11a_e.shp")
merged_set <- merge(shp, data, by.x='PRENAME', by.y='Jurisdiction', all=TRUE)
shp$Deleterious
merged_set
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
shp<- readOGR("C:/Users/Windows11/Downloads/lpr_000b16a_e/lpr_000b16a_e.shp")
merged_set <- merge(shp, data, by.x='PRENAME', by.y='Jurisdiction', all=TRUE)
View(merged_set)
color_palette <- ("inferno")
bins <- 5
if.na <- "#808080"
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
leaflet()%>%
addPolygons(data=provinces,
color='red',
weight=1,
fillColor = variance(range))
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = merged_set$Deleterious)
merged_set$Deleterious
View(as.data.frame(merged_set))
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
shp<- readOGR("C:/Users/Windows11/Downloads/lpr_000b16a_e/lpr_000b16a_e.shp")
merged_set <- merge(shp, data, by.x='PRENAME', by.y='Jurisdiction', all=TRUE)
color_palette <- ("inferno")
bins <- 12
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range))
color_palette <- ("viridis")
bins <- 16
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range))
color_palette <- ("RdYlGn")
bins <- 16
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range))
position <- "bottomleft"
opacity <- 15
scale <- variance (from:)
position <- "bottomleft"
opacity <- 15
scale <- variance
value <- range
title <- "TSS/BOD mg/L"
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range))%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
color_palette <- ("Dark2")
bins <- 5
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
###Legend
position <- "bottomleft"
opacity <- 15
scale <- variance
value <- range
title <- "TSS/BOD mg/L"
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
opacity = 0,
fillColor = variance(range))%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
opacity=15,
fillColor = variance(range))%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
###colormaps
color_palette <- ("Dark2")
bins <- 5
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
###Legend
position <- "bottomleft"
opacity <- 15
scale <- variance
value <- range
title <- "TSS/BOD mg/L"
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
opacity=15,
fillColor = variance(range))%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
###colormaps
color_palette <- ("Dark2")
bins <- 5
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
###Legend
position <- "bottomleft"
opacity <- 15
scale <- variance
value <- range
title <- "TSS/BOD mg/L"
gc()
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range))%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
gc()
position <- "bottomleft"
opacity <- 9
scale <- variance
value <- range
title <- "TSS/BOD mg/L"
gc()
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range))%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
data <- read.csv("D:/Effluent & Storm Water Management/working files/canada-wide guidelines.csv")
merged_set <- merge(shp, data, by.x='PRENAME', by.y='Jurisdiction', all=TRUE)
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range))%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
leaflet()%>%
addPolygons(data=merged_set,
color='black',
weight=1,
fillColor = variance(range),
label=~Deleterious)%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
class(merged_set)
gc()
plot(merged_set)
plot(merged_set)
leaflet()%>%
addPolygons(data=merged_set,
color='black',
weight=1,
fillColor = variance(range),
label=~Deleterious)
color_palette <- ("Dark2")
bins <- 5
range <- provinces$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
###Legend
position <- "bottomleft"
opacity <- 9
scale <- variance
value <- range
title <- "TSS/BOD mg/L"
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range))%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
gc()
color_palette <- ("Dark2")
bins <- 5
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
###Legend
position <- "bottomleft"
opacity <- 9
scale <- variance
value <- range
title <- "TSS/BOD mg/L"
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range))%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
gc()
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range),
label=~Jurisdiction)%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
provinces
gc()
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range),
label=~PRENAME)%>%
addLegend(position,
scale,
value,
title=title,
opacity=opacity)
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range),
label=~PRENAME,
labelOptions = labelOptions(noHide = T,
direction = 'top', textOnly = T))
)
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range),
label=~PRENAME)
gc()
merged_set
View(as.data.frame(merged_set))
color_palette <- ("Dark2")
bins <- 13
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range),
label=~PRENAME)
gc()
color_palette <- ("Paired")
bins <- 13
range <- merged_set$Deleterious
variance <- colorBin(color_palette, range, bins, na.color = if.na)
leaflet()%>%
addPolygons(data=provinces,
color='black',
weight=1,
fillColor = variance(range),
label=~PRENAME)
gc()
merged_set$Deleterious
leaflet()%>%
addProviderTiles(provider = providers$Stamen.TonerBackground)
addPolygons(data=provinces,
color='black',
weight=1,
label=~PRENAME)
leaflet()%>%
addProviderTiles(provider = providers$Stamen.Toner)
addPolygons(data=provinces,
color='black',
weight=1,
label=~PRENAME)
leaflet()%>%
addProviderTiles(provider = providers$Stamen.Toner)%>%
addPolygons(data=provinces,
color='black',
weight=1,
label=~PRENAME)
leaflet()%>%
addProviderTiles(provider = providers$OpenStreetMap)%>%
addPolygons(data=provinces,
color='black',
fillColor = NA,
weight=1,
label=~PRENAME)
gc()
leaflet()%>%
addProviderTiles(provider = providers$OpenStreetMap)%>%
addPolygons(data=provinces,
color='black',
fillColor = 'white',
weight=1,
fillOpacity = 0.01,
label=~PRENAME)
gc()
leaflet()%>%
addPolygons(data=provinces,
color='black',
fillColor = 'white',
weight=1,
fillOpacity = 0.01,
label=~PRENAME)
gc()
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
shiny::runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
runApp('D:/3605d7afc8f446428159165712d19a96')
shiny::runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
runApp('C:/Users/Windows11/Desktop/3605d7afc8f446428159165712d19a96')
